{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jyataslam/Desktop/ReactDeveloperCourse/crwn-clothing/src/components/sign-in/sign-in.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../../components/form-input/form-input\";\nimport CustomButton from \"../custom-button/custom-button\";\nimport \"./sign-in.styles.scss\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\n\nconst SignIn = () => {\n  _s();\n\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = this.state;\n    const {\n      emailSignInStart\n    } = this.props;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const {\n    googleSignInStart\n  } = this.props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: this.state.email,\n        handleChange: this.handleChange,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        handleChange: this.handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/jyataslam/Desktop/ReactDeveloperCourse/crwn-clothing/src/components/sign-in/sign-in.js"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","state","email","password","setEmail","setPassword","handleSubmit","event","preventDefault","props","handleChange","value","name","target","setState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormInput from \"../../components/form-input/form-input\";\nimport CustomButton from \"../custom-button/custom-button\";\nimport \"./sign-in.styles.scss\";\n\nimport {\n    googleSignInStart,\n    emailSignInStart,\n} from \"../../redux/user/user.actions\";\n\nconst SignIn = () => {\n    state = {\n        email: \"\",\n        password: \"\",\n    };\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        const { email, password } = this.state;\n        const { emailSignInStart } = this.props;\n\n        emailSignInStart(email, password);\n    };\n\n    const handleChange = event => {\n        const { value, name } = event.target;\n\n        this.setState({ [name]: value });\n    };\n\n    const { googleSignInStart } = this.props;\n    return (\n        <div className=\"sign-in\">\n            <h2 className=\"title\">I already have an account</h2>\n            <span>Sign in with your email and password</span>\n\n            <form onSubmit={this.handleSubmit}>\n                <FormInput\n                    type=\"email\"\n                    name=\"email\"\n                    value={this.state.email}\n                    handleChange={this.handleChange}\n                    label=\"email\"\n                    required\n                />\n                <FormInput\n                    type=\"password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    handleChange={this.handleChange}\n                    label=\"password\"\n                    required\n                />\n                <div className=\"buttons\">\n                    <CustomButton type=\"submit\">Sign In</CustomButton>\n                    <CustomButton\n                        type=\"button\"\n                        onClick={googleSignInStart}\n                        isGoogleSignIn\n                    >\n                        Sign In With Google\n                    </CustomButton>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) =>\n        dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}