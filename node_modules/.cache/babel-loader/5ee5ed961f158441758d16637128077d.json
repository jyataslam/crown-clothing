{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport collection from \"../pages/collection/collection\";\nconst config = {\n  apiKey: \"AIzaSyBaOUfC1ioshfzMIa_VLlLSqTIPTSKKtQM\",\n  authDomain: \"crwn-clothing-db-232d4.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-232d4\",\n  storageBucket: \"crwn-clothing-db-232d4.appspot.com\",\n  messagingSenderId: \"96871410855\",\n  appId: \"1:96871410855:web:2d14e7f1b6ef3dfea7bf82\",\n  measurementId: \"G-V6GDC23PNR\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (err) {\n      console.log(\"error creating user\", err.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(\"collection ref\", collectionRef);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/jyataslam/Desktop/ReactDeveloperCourse/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","collection","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","err","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","obj","newDocRef","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,wCAFD;AAGXC,EAAAA,SAAS,EAAE,wBAHA;AAIXC,EAAAA,aAAa,EAAE,oCAJJ;AAKXC,EAAAA,iBAAiB,EAAE,aALR;AAMXC,EAAAA,KAAK,EAAE,0CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOa,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,GAAG,CAACG,OAAvC;AACH;AACJ;;AAED,SAAOf,OAAP;AACH,CAxBM;AA0BP,OAAO,MAAMgB,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACtE,QAAMC,aAAa,GAAGlB,SAAS,CAACb,UAAV,CAAqB6B,aAArB,CAAtB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BK,aAA9B;AAEA,QAAMC,KAAK,GAAGnB,SAAS,CAACmB,KAAV,EAAd;AACAF,EAAAA,YAAY,CAACG,OAAb,CAAqBC,GAAG,IAAI;AACxB,UAAMC,SAAS,GAAGJ,aAAa,CAACjB,GAAd,EAAlB;AACAkB,IAAAA,KAAK,CAACT,GAAN,CAAUY,SAAV,EAAqBD,GAArB;AACH,GAHD;AAIH,CATM;AAWPnC,QAAQ,CAACqC,aAAT,CAAuBnC,MAAvB;AAEA,OAAO,MAAMoC,IAAI,GAAGtC,QAAQ,CAACsC,IAAT,EAAb;AAEP,OAAO,MAAMxB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMyB,QAAQ,GAAG,IAAIvC,QAAQ,CAACsC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAevC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport collection from \"../pages/collection/collection\";\n\nconst config = {\n    apiKey: \"AIzaSyBaOUfC1ioshfzMIa_VLlLSqTIPTSKKtQM\",\n    authDomain: \"crwn-clothing-db-232d4.firebaseapp.com\",\n    projectId: \"crwn-clothing-db-232d4\",\n    storageBucket: \"crwn-clothing-db-232d4.appspot.com\",\n    messagingSenderId: \"96871410855\",\n    appId: \"1:96871410855:web:2d14e7f1b6ef3dfea7bf82\",\n    measurementId: \"G-V6GDC23PNR\",\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    const snapShot = await userRef.get();\n\n    if (!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData,\n            });\n        } catch (err) {\n            console.log(\"error creating user\", err.message);\n        }\n    }\n\n    return userRef;\n};\n\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n    console.log(\"collection ref\", collectionRef);\n\n    const batch = firestore.batch();\n    objectsToAdd.forEach(obj => {\n        const newDocRef = collectionRef.doc();\n        batch.set(newDocRef, obj);\n    });\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\n\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}